% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metrics.R
\name{interval_width}
\alias{interval_width}
\title{Mean width of prediction intervals}
\usage{
interval_width(lower_bound, upper_bound)
}
\arguments{
\item{lower_bound}{A numeric vector of lower bounds of the prediction intervals.}

\item{upper_bound}{A numeric vector of upper bounds of the prediction intervals.}
}
\value{
A single numeric value representing the mean width of the prediction intervals.
}
\description{
Computes the mean width of prediction intervals, defined as the average difference between upper and lower bounds.
}
\details{
The mean width is calculated as:
\deqn{
\text{Mean Width} = \frac{1}{n} \sum_{i=1}^{n} (ub_i - lb_i)
}
}
\examples{
library(dplyr)
library(tibble)

# Simulate example data
set.seed(123)
x1 <- runif(1000)
x2 <- runif(1000)
y <- rnorm(1000, mean = x1 + x2, sd = 1)
df <- tibble(x1, x2, y)

# Split into training, calibration, and test sets
df_train <- df \%>\% slice(1:500)
df_cal <- df \%>\% slice(501:750)
df_test <- df \%>\% slice(751:1000)

# Fit a model on the log-scale
mod <- lm(y ~ x1 + x2, data = df_train)

# Generate predictions
pred_cal <- predict(mod, newdata = df_cal)
pred_test <- predict(mod, newdata = df_test)

# Estimate normal prediction intervals from calibration data
intervals <- pinterval_parametric(
  pred = pred_test,
  calib = pred_cal,
  calib_truth = df_cal$y,
  dist = "norm",
  alpha = 0.1
)

# Calculate empirical coverage
interval_width(lower_bound = intervals$lower_bound,
         upper_bound = intervals$upper_bound)
}
